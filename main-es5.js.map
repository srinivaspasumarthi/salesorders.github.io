{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/logincheck.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/dashboard/dashboard.module.ts\",\n\t\t\"dashboard-dashboard-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"<small>Home Page content</small>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col container jumbotron\\\">\\n        <h1>\\n          Registration Form\\n        </h1>\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter name\\\" name=\\\"name\\\" [(ngModel)]=\\\"data.name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>email</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\" name=\\\"email\\\" [(ngModel)]=\\\"data.email\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>phone</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"data.phone\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Username</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter username\\\" name=\\\"username\\\" [(ngModel)]=\\\"data.username\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter password\\\" name=\\\"password\\\" [(ngModel)]=\\\"data.password\\\">\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"registration();\\\">Submit</button>\\n        </form>\\n      </div>\\n      <div >\\n\\n      </div>\\n      <div class=\\\"col container jumbotron\\\">\\n        <h1>\\n          Login Form\\n        </h1>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"loginMessage\\\">Please enter valid data</div>\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">User Name</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\"\\n              placeholder=\\\"Enter username\\\" name=\\\"loginusername\\\" [(ngModel)]=\\\"loginData.username\\\">\\n            <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputPassword1\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\"  placeholder=\\\"Password\\\" name=\\\"loginpassword\\\" [(ngModel)]=\\\"loginData.password\\\">\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login();\\\">Submit</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule} from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LogincheckService } from './logincheck.service';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent } ,\n  { path: 'dashboard'\n   , loadChildren: './dashboard/dashboard.module#DashboardModule'\n   , canActivate: [LogincheckService]\n   // , component: DashboardComponent ,\n  }\n\n];\n@NgModule({\n  imports: [\n    CommonModule , RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, NgModule } from '@angular/core';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'regstrNode';\n\n  constructor(  ) {\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {NgxLocalStorageModule} from 'ngx-localstorage';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule ,\n    HttpClientModule ,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    NgxLocalStorageModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { observable, Observable , BehaviorSubject } from 'rxjs';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService implements Resolve<Observable<string>> {\n\n  private messageSource = new BehaviorSubject(1);\n  currentMessage = this.messageSource.asObservable();\n\n  changeMessage(message: number) {\n    this.messageSource.next(message);\n    console.log(message);\n  }\n\n  constructor(private http: HttpClient , private router: Router) { }\n\n  resolve( route: ActivatedRouteSnapshot,  state: RouterStateSnapshot) {\n    console.log('resolve in dataservice');\n    console.log(route.params.id);\n    console.log(this.getHeader(route.params.id));\n    this.getHeader(route.params.id).subscribe(\n      (success) => {\n        console.log(success);\n        if (success.data.length == 0) {\n          alert('Order ' + route.params.id + ' does not exist');\n          this.router.navigate(['/dashboard/view']);\n        }\n            },\n      (error) => {\n        alert('Order ' + route.params.id + ' does not exist');\n        this.router.navigate(['/dashboard/view']);\n      }\n    );\n    return this.getHeader(route.params.id);\n  }\n\n  registration(data): Observable<any> {\n    var response = this.http.post('http://localhost:9999/crud/user/create', data );\n    return response ;\n  }\n\n  login(data): Observable<any> {\n    var response = this.http.post('http://localhost:9999/crud/user/login', data );\n    return response ;\n  }\n  header(data): Observable<any> {\n    var response = this.http.post('http://localhost:9999/crud/order/header/create', data );\n    return response ;\n  }\n  maxOrderNumber(): Observable<any> {\n    var response = this.http.get('http://localhost:9999/crud/header/maxordernumber');\n    return response ;\n  }\n  linesInsert(data): Observable<any> {\n    var response = this.http.post('http://localhost:9999/crud/order/lines/create', data);\n    return response ;\n  }\n  getHeaders(): Observable<any> {\n    var response = this.http.get('http://localhost:9999/crud/get/headers');\n    return response ;\n  }\n  getHeader(data): Observable<any> {\n    var response = this.http.get('http://localhost:9999/crud/get/header?id=' + data);\n    return response ;\n  }\n  updateHeader(data): Observable<any> {\n    var response = this.http.post('http://localhost:9999/crud/update/header', data);\n    return response ;\n  }\n  updateLine(data): Observable<any> {\n    var response = this.http.post(\"http://localhost:9999/crud/update/line\" , data);\n    //var response = this.http.post('http://localhost:9999/crud/update/header', data);\n    return response ;\n  }\n  updateLines(data): Observable<any> {\n    var response = this.http.post(\"http://localhost:9999/crud/update/lines\" , data);\n    //var response = this.http.post('http://localhost:9999/crud/update/header', data);\n    return response ;\n  }\n  getLines(data): Observable<any> {\n    var response = this.http.get('http://localhost:9999/crud/get/lines?id=' + data);\n    return response ;\n  }\n  deleteOrder(data): Observable<any>  {\n    console.log(data);\n    var response = this.http.delete('http://localhost:9999/crud/orders/delete?id=' + data);\n    return response;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport {LocalStorageService} from 'ngx-localstorage';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  loginMessage = false ;\n  constructor(private dataservice: DataService , private router: Router , private local: LocalStorageService ) {\n\n  }\n\n  public data = {\n    name: null ,\n    email: null,\n    phone: null,\n    username: null,\n    password: null\n  };\n\n  public loginData = {\n   username: null,\n   password: null\n  };\n\n  login() {\n    this.dataservice.login(this.loginData).subscribe\n     (\n      (success) => {\n       console.log(success);\n       if ( success.response == 0) {\n         this.loginMessage = true;\n         this.loginData = {\n           username: null,\n           password: null\n         };\n       } else {\n         this.local.set('username', this.loginData.username);\n         this.local.set('password', this.loginData.password);\n         console.log('navigating');\n         this.router.navigate(['dashboard']);\n       }\n      },\n      (error) => {\n        console.log(error);\n      } );\n  }\n  ngOnInit() {\n\n  }\n registration() {\n    console.log(this.data);\n    //this.http.post('http://localhost:9999/crud/user/create', this.data).subscribe\n    this.dataservice.registration(this.data).subscribe\n     (\n      (success) => {\n       console.log(success);\n      },\n      (error) => {\n        console.log(error);\n      } );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRoute } from '@angular/router';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LogincheckService  implements CanActivate {\n  constructor(private local: LocalStorageService , private router: Router ) { }\n  canActivate() {\n    console.log('canactivate: Checking routing');\n   // console.log(this.route.snapshot.params.id);\n    if (this.local.get('username') == null) {\n      this.router.navigate(['/']);\n\n   } else {\n\n   }\n\n    return true;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}